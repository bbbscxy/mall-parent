<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="10 seconds">

    <property name="log.path.root" value="@log.dir@" />
    <property name="log.charset" value="UTF-8" />

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

    <property name="log.pattern.file" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level ${PID:- } --- [%thread] %logger : %msg%n%xException" />
    <property name="log.pattern.error.file" value="%d{yyyy-MM-dd HH:mm:ss} %-5level ${PID:- } --- [%thread] %logger %method : %msg%n%caller{1..3}%xException" />
    <property name="log.pattern.console" value="%clr(%d{yyyy-MM-dd HH:mm:ss}) %clr(%-5level) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%-10.10thread]){faint} %clr(%-40.40logger{39}){blue} %clr(:){faint} %m%n%xException" />

    <!-- 控制台输出-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="${log.charset}">
            <pattern>${log.pattern.console}</pattern>
        </encoder>
    </appender>

    <!-- info 日志文件 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path.root}/info.log</file>
        <append>true</append>
        <encoder charset="${log.charset}">
            <pattern>${log.pattern.file}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"><!-- 滚动策略 大小 策略 -->
            <fileNamePattern>${log.path.root}/%d{yyyy-MM-dd}-info-%i.log</fileNamePattern>
            <maxFileSize>10MB</maxFileSize><!-- 单个日志大小 -->
            <maxHistory>10</maxHistory><!--保留的归档文件的最大数量 -->
        </rollingPolicy>
    </appender>

    <!-- warn 日志文件 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${log.path.root}/error.log</file>
        <append>true</append>
        <encoder charset="${log.charset}">
            <pattern>${log.pattern.error.file}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"><!-- 滚动策略 大小 策略 -->
            <fileNamePattern>${log.path.root}/%d{yyyy-MM-dd}-error-%i.log</fileNamePattern>
            <maxFileSize>10MB</maxFileSize><!-- 单个日志大小 -->
            <maxHistory>10</maxHistory><!--保留的归档文件的最大数量 -->
        </rollingPolicy>
    </appender>

    <!--系统警告日志打印到单独日志文件-->
    <logger name="com.vim" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="INFO_FILE" />
    </logger>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="INFO_FILE" />
    </root>
</configuration>